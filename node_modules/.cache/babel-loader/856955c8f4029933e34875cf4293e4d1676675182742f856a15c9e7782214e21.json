{"ast":null,"code":"import { ref, onMounted, computed } from \"vue\";\nimport Web3 from \"web3\";\nimport mtcJSON from \"./contract/MyToken.json\";\nconst goerLiWS = \"wss://goerli.infura.io/ws/v3/dc92288a859d445890ede39d9dba5861\";\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const web3 = new Web3(Web3.givenProvider || goerLiWS);\n\n    //0xd9145CCE52D386f254917e481eB44e9943F39138\n    // const metContract = new web3.eth.Contract(\n    //   mtcJSON.abi\n    //   ,\"0xd9145CCE52D386f254917e481eB44e9943F39138\"\n    // );\n\n    const name = ref(\"\");\n    const symbol = ref(\"\");\n    const totalSupply = ref(\"\");\n    const balanceOf = ref(0);\n    const currentAccount = ref(\"\");\n\n    //转账信息\n    const toAddress = ref(\"\");\n    const amount = ref(0);\n    const getCoinInfo = async () => {\n      const account = await web3.eth.requestAccounts();\n      currentAccount.value = account[0];\n      name.value = await metContract.methods.name().call();\n      symbol.value = await metContract.methods.symbol().call();\n      totalSupply.value = await metContract.methods.totalSupply().call();\n      balanceOf.value = await metContract.methods.balanceOf(account[0]).call();\n    };\n    const ts = computed(() => {\n      return web3.utils.fromWei(totalSupply.value, 'ether');\n    });\n    onMounted(() => {\n      getCoinInfo();\n    });\n    const send = () => {\n      const weiAomunt = web3.utils.toWei(amount.value, 'ether');\n      metContract.methods.transfer(toAddress, weiAomunt).send({\n        from: currentAccount.value[0]\n      }).on(\"receipt\", res => {\n        console.log(\"交易成功！\");\n        console.log(res);\n      });\n    };\n\n    // ( async()=>{\n    //   const account = await web3.eth.requestAccounts();\n    //   console.log(\"account--->\",account)\n    // })();\n\n    const __returned__ = {\n      goerLiWS,\n      web3,\n      name,\n      symbol,\n      totalSupply,\n      balanceOf,\n      currentAccount,\n      toAddress,\n      amount,\n      getCoinInfo,\n      ts,\n      send,\n      ref,\n      onMounted,\n      computed,\n      get Web3() {\n        return Web3;\n      },\n      get mtcJSON() {\n        return mtcJSON;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","Web3","mtcJSON","goerLiWS","web3","givenProvider","name","symbol","totalSupply","balanceOf","currentAccount","toAddress","amount","getCoinInfo","account","eth","requestAccounts","value","metContract","methods","call","ts","utils","fromWei","send","weiAomunt","toWei","transfer","from","on","res","console","log"],"sources":["D:/a/wallet-demo/web3-erc201/src/App.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted, computed } from \"vue\";\nimport Web3 from \"web3\";\nimport mtcJSON from \"./contract/MyToken.json\";\n\nconst goerLiWS =\n  \"wss://goerli.infura.io/ws/v3/dc92288a859d445890ede39d9dba5861\";\n\nconst web3 = new Web3(Web3.givenProvider || goerLiWS);\n\n//0xd9145CCE52D386f254917e481eB44e9943F39138\n// const metContract = new web3.eth.Contract(\n//   mtcJSON.abi\n//   ,\"0xd9145CCE52D386f254917e481eB44e9943F39138\"\n// );\n\nconst name = ref(\"\");\nconst symbol = ref(\"\");\nconst totalSupply = ref(\"\");\nconst balanceOf = ref(0);\nconst currentAccount = ref(\"\");\n\n//转账信息\nconst toAddress = ref(\"\")\nconst amount = ref(0)\n\n\nconst getCoinInfo = async () => {\n  const account = await web3.eth.requestAccounts();\n  currentAccount.value = account[0];\n  name.value = await metContract.methods.name().call();\n  symbol.value = await metContract.methods.symbol().call();\n  totalSupply.value = await metContract.methods.totalSupply().call();\n  balanceOf.value = await metContract.methods.balanceOf(account[0]).call();\n};\n\nconst ts = computed(()=>{\n  return web3.utils.fromWei(totalSupply.value,'ether')\n})\n\nonMounted(() => {\n  getCoinInfo();\n});\n\nconst send = ()=>{\n  const weiAomunt = web3.utils.toWei(amount.value,'ether');\n\n  metContract.methods.transfer(toAddress,weiAomunt).send({\n    from:currentAccount.value[0],\n  })\n  .on(\"receipt\",(res)=>{\n    console.log(\"交易成功！\");\n    console.log(res);\n  })\n}\n\n// ( async()=>{\n//   const account = await web3.eth.requestAccounts();\n//   console.log(\"account--->\",account)\n// })();\n</script>\n\n<template>\n  <h1>基础信息</h1>\n  <hr />\n  <p>当前账号：{{ currentAccount }}</p>\n  <p>代币名称：{{ name }}</p>\n  <p>代币标识：{{ symbol }}</p>\n  <p>发行量：{{ totalSupply }}</p>\n  <p>持有数量：{{ balanceOf }}</p>\n  <h1>转装操作</h1>\n<hr/>\n<p>转入地址：<input type=\"text\" v-model=\"toAddress\"/></p>\n<p>转出金额：<input type=\"text\" v-model=\"amount\"/></p>\n<button @click=\"send\">开始转账</button>\n</template>\n\n<style lang=\"less\">\n</style>"],"mappings":"AACA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,OAAO,MAAM,yBAAyB;AAE7C,MAAMC,QAAQ,GACZ,+DAA+D;;;;;;;IAEjE,MAAMC,IAAI,GAAG,IAAIH,IAAI,CAACA,IAAI,CAACI,aAAa,IAAIF,QAAQ,CAAC;;IAErD;IACA;IACA;IACA;IACA;;IAEA,MAAMG,IAAI,GAAGR,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMS,MAAM,GAAGT,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMU,WAAW,GAAGV,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMW,SAAS,GAAGX,GAAG,CAAC,CAAC,CAAC;IACxB,MAAMY,cAAc,GAAGZ,GAAG,CAAC,EAAE,CAAC;;IAE9B;IACA,MAAMa,SAAS,GAAGb,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMc,MAAM,GAAGd,GAAG,CAAC,CAAC,CAAC;IAGrB,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,OAAO,GAAG,MAAMV,IAAI,CAACW,GAAG,CAACC,eAAe,CAAC,CAAC;MAChDN,cAAc,CAACO,KAAK,GAAGH,OAAO,CAAC,CAAC,CAAC;MACjCR,IAAI,CAACW,KAAK,GAAG,MAAMC,WAAW,CAACC,OAAO,CAACb,IAAI,CAAC,CAAC,CAACc,IAAI,CAAC,CAAC;MACpDb,MAAM,CAACU,KAAK,GAAG,MAAMC,WAAW,CAACC,OAAO,CAACZ,MAAM,CAAC,CAAC,CAACa,IAAI,CAAC,CAAC;MACxDZ,WAAW,CAACS,KAAK,GAAG,MAAMC,WAAW,CAACC,OAAO,CAACX,WAAW,CAAC,CAAC,CAACY,IAAI,CAAC,CAAC;MAClEX,SAAS,CAACQ,KAAK,GAAG,MAAMC,WAAW,CAACC,OAAO,CAACV,SAAS,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC;IAC1E,CAAC;IAED,MAAMC,EAAE,GAAGrB,QAAQ,CAAC,MAAI;MACtB,OAAOI,IAAI,CAACkB,KAAK,CAACC,OAAO,CAACf,WAAW,CAACS,KAAK,EAAC,OAAO,CAAC;IACtD,CAAC,CAAC;IAEFlB,SAAS,CAAC,MAAM;MACdc,WAAW,CAAC,CAAC;IACf,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAGA,CAAA,KAAI;MACf,MAAMC,SAAS,GAAGrB,IAAI,CAACkB,KAAK,CAACI,KAAK,CAACd,MAAM,CAACK,KAAK,EAAC,OAAO,CAAC;MAExDC,WAAW,CAACC,OAAO,CAACQ,QAAQ,CAAChB,SAAS,EAACc,SAAS,CAAC,CAACD,IAAI,CAAC;QACrDI,IAAI,EAAClB,cAAc,CAACO,KAAK,CAAC,CAAC;MAC7B,CAAC,CAAC,CACDY,EAAE,CAAC,SAAS,EAAEC,GAAG,IAAG;QACnBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpBD,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;;IAED;IACA;IACA;IACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}