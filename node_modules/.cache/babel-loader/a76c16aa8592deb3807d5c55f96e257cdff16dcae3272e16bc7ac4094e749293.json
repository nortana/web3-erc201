{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"基础信息\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"转装操作\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _createElementVNode(\"p\", null, \"当前账号：\" + _toDisplayString($setup.currentAccount), 1 /* TEXT */), _createElementVNode(\"p\", null, \"代币名称：\" + _toDisplayString($setup.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"代币标识：\" + _toDisplayString($setup.symbol), 1 /* TEXT */), _createElementVNode(\"p\", null, \"发行量：\" + _toDisplayString($setup.totalSupply), 1 /* TEXT */), _createElementVNode(\"p\", null, \"持有数量：\" + _toDisplayString($setup.balanceOf), 1 /* TEXT */), _hoisted_3, _hoisted_4, _createElementVNode(\"p\", null, [_createTextVNode(\"转入地址：\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.toAddress = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.toAddress]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"转出金额：\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.amount = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.amount]])]), _createElementVNode(\"button\", {\n    onClick: $setup.send\n  }, \"开始转账\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_toDisplayString","$setup","currentAccount","name","symbol","totalSupply","balanceOf","_hoisted_3","_hoisted_4","_createTextVNode","type","_cache","$event","toAddress","amount","onClick","send"],"sources":["D:\\a\\wallet-demo\\web3-erc201\\src\\App.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted, computed } from \"vue\";\nimport Web3 from \"web3\";\nimport mtcJSON from \"./contract/MyToken.json\";\n\nconst goerLiWS =\n  \"wss://goerli.infura.io/ws/v3/dc92288a859d445890ede39d9dba5861\";\n\nconst web3 = new Web3(Web3.givenProvider || goerLiWS);\n\n0xd9145CCE52D386f254917e481eB44e9943F39138\nconst metContract = new web3.eth.Contract(\n  mtcJSON.abi\n  ,\"0xd9145CCE52D386f254917e481eB44e9943F39138\"\n);\n\nconst name = ref(\"\");\nconst symbol = ref(\"\");\nconst totalSupply = ref(\"\");\nconst balanceOf = ref(0);\nconst currentAccount = ref(\"\");\n\n//转账信息\nconst toAddress = ref(\"\")\nconst amount = ref(0)\n\n\nconst getCoinInfo = async () => {\n  const account = await web3.eth.requestAccounts();\n  currentAccount.value = account[0];\n  name.value = await metContract.methods.name().call();\n  symbol.value = await metContract.methods.symbol().call();\n  totalSupply.value = await metContract.methods.totalSupply().call();\n  balanceOf.value = await metContract.methods.balanceOf(account[0]).call();\n};\n\nconst ts = computed(()=>{\n  return web3.utils.fromWei(totalSupply.value,'ether')\n})\n\nonMounted(() => {\n  getCoinInfo();\n});\n\nconst send = ()=>{\n  const weiAomunt = web3.utils.toWei(amount.value,'ether');\n\n  metContract.methods.transfer(toAddress,weiAomunt).send({\n    from:currentAccount.value[0],\n  })\n  .on(\"receipt\",(res)=>{\n    console.log(\"交易成功！\");\n    console.log(res);\n  })\n}\n\n// ( async()=>{\n//   const account = await web3.eth.requestAccounts();\n//   console.log(\"account--->\",account)\n// })();\n</script>\n\n<template>\n  <h1>基础信息</h1>\n  <hr />\n  <p>当前账号：{{ currentAccount }}</p>\n  <p>代币名称：{{ name }}</p>\n  <p>代币标识：{{ symbol }}</p>\n  <p>发行量：{{ totalSupply }}</p>\n  <p>持有数量：{{ balanceOf }}</p>\n  <h1>转装操作</h1>\n<hr/>\n<p>转入地址：<input type=\"text\" v-model=\"toAddress\"/></p>\n<p>转出金额：<input type=\"text\" v-model=\"amount\"/></p>\n<button @click=\"send\">开始转账</button>\n</template>\n\n<style lang=\"less\">\n</style>"],"mappings":";gCA+DEA,mBAAA,CAAa,YAAT,MAAI;gCACRA,mBAAA,CAAM;gCAMNA,mBAAA,CAAa,YAAT,MAAI;gCACVA,mBAAA,CAAK;;uBAvELC,mBAAA,CAAAC,SAAA,SA+DEC,UAAa,EACbC,UAAM,EACNJ,mBAAA,CAAgC,WAA7B,OAAK,GAAAK,gBAAA,CAAGC,MAAA,CAAAC,cAAc,kBACzBP,mBAAA,CAAsB,WAAnB,OAAK,GAAAK,gBAAA,CAAGC,MAAA,CAAAE,IAAI,kBACfR,mBAAA,CAAwB,WAArB,OAAK,GAAAK,gBAAA,CAAGC,MAAA,CAAAG,MAAM,kBACjBT,mBAAA,CAA4B,WAAzB,MAAI,GAAAK,gBAAA,CAAGC,MAAA,CAAAI,WAAW,kBACrBV,mBAAA,CAA2B,WAAxB,OAAK,GAAAK,gBAAA,CAAGC,MAAA,CAAAK,SAAS,kBACpBC,UAAa,EACfC,UAAK,EACLb,mBAAA,CAAoD,YAxEpDc,gBAAA,CAwEG,OAAK,G,gBAAAd,mBAAA,CAAwC;IAAjCe,IAAI,EAAC,MAAM;IAxE1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAwEoCX,MAAA,CAAAY,SAAS,GAAAD,MAAA;iDAATX,MAAA,CAAAY,SAAS,E,KAC7ClB,mBAAA,CAAiD,YAzEjDc,gBAAA,CAyEG,OAAK,G,gBAAAd,mBAAA,CAAqC;IAA9Be,IAAI,EAAC,MAAM;IAzE1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyEoCX,MAAA,CAAAa,MAAM,GAAAF,MAAA;iDAANX,MAAA,CAAAa,MAAM,E,KAC1CnB,mBAAA,CAAmC;IAA1BoB,OAAK,EAAEd,MAAA,CAAAe;EAAI,GAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}